<templateSet group="Flutter">
  <template name="futureBldr" value="FutureBuilder(&#10;future: $FUTURE$,initialData: $INITIAL$,builder: (BuildContext context, AsyncSnapshot snapshot) {if (snapshot.hasData) {if (snapshot.data!=null) {return $WIDGET$;} else {return CircularProgressIndicator();}})," description="Create FutureBuilder" toReformat="true" toShortenFQNames="true">
    <variable name="FUTURE" expression="&quot;future&quot;" defaultValue="" alwaysStopAt="true" />
    <variable name="INITIAL" expression="&quot;initialValue&quot;" defaultValue="" alwaysStopAt="true" />
    <variable name="WIDGET" expression="&quot;widget&quot;" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="streamBldr" value="StreamBuilder(stream: $STREAM$, builder: (BuildContext context, AsyncSnapshot snapshot) {if(snapshot.hasError) return $ERRORWIDGET$; switch (snapshot.connectionState) {case ConnectionState.none: return $DEFAULTWIDGET$;case ConnectionState.waiting: return $LOADINGWIDGET$;case ConnectionState.active: return $ACTIVEWIDGET$;case ConnectionState.done: return $FINISHEDWIDGET$;}return null; // unreachable}, )," description="Create StreamBuilder" toReformat="true" toShortenFQNames="true">
    <variable name="STREAM" expression="&quot;stream&quot;" defaultValue="" alwaysStopAt="true" />
    <variable name="DEFAULTWIDGET" expression="&quot;ConnectionNone&quot;" defaultValue="" alwaysStopAt="true" />
    <variable name="LOADINGWIDGET" expression="&quot;ConnectionWaiting&quot;" defaultValue="" alwaysStopAt="true" />
    <variable name="ACTIVEWIDGET" expression="&quot;ConnectionActive&quot;" defaultValue="" alwaysStopAt="true" />
    <variable name="FINISHEDWIDGET" expression="&quot;ConnectionDone&quot;" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="pagestart" value="import 'package:flutter/material.dart';&#10;import 'package:flutter/services.dart';&#10;&#10;void main() =&gt; runApp($CLASS_NAME$());&#10;&#10;class $CLASS_NAME$ extends StatelessWidget {&#10;  final SystemUiOverlayStyle _style = SystemUiOverlayStyle(statusBarColor: Colors.transparent);&#10;  @override&#10;  Widget build(BuildContext context) {&#10;    SystemChrome.setSystemUIOverlayStyle(_style);&#10;    return MaterialApp(&#10;      home: $CLASS_NAME$StatefulWidget(),&#10;      theme: ThemeData(primarySwatch: Colors.blue),&#10;    );&#10;  }&#10;}&#10;&#10;class $CLASS_NAME$StatefulWidget extends StatefulWidget {&#10;  @override&#10;  State&lt;StatefulWidget&gt; createState() {&#10;    return _$CLASS_NAME$State();&#10;  }&#10;}&#10;&#10;class _$CLASS_NAME$State extends State&lt;StatefulWidget&gt; {&#10;&#10;  @override&#10;  Widget build(BuildContext context) {&#10;       return Scaffold(&#10;      appBar: AppBar(&#10;        title: Text(&quot;$CLASS_NAME$&quot;),&#10;      ),&#10;      body: Center(&#10;        child: Text(&quot;$CLASS_NAME$&quot;),&#10;      ),&#10;    );&#10;  }&#10;}&#10;" description="Create page with MaterialApp" toReformat="true" toShortenFQNames="true">
    <variable name="CLASS_NAME" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
</templateSet>